// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tariff.Data.Service.Context;

namespace Tariff.Data.Service.Migrations
{
    [DbContext(typeof(TariffContext))]
    partial class TariffContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Tariff.API.Data.InvoiceMaster", b =>
                {
                    b.Property<int>("invoiceId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("invoiceName")
                        .IsRequired();

                    b.Property<byte>("isActive");

                    b.HasKey("invoiceId");

                    b.ToTable("InvoiceMaster");

                    b.HasData(
                        new { invoiceId = 1, invoiceName = "Sample Invoice 1", isActive = (byte)1 },
                        new { invoiceId = 2, invoiceName = "Sample invoice 2", isActive = (byte)1 }
                    );
                });

            modelBuilder.Entity("Tariff.API.Data.ParameterMaster", b =>
                {
                    b.Property<int>("parameterId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("isActive");

                    b.Property<string>("parameterName")
                        .IsRequired();

                    b.HasKey("parameterId");

                    b.ToTable("ParameterMaster");

                    b.HasData(
                        new { parameterId = 1, isActive = (byte)1, parameterName = "Vessel Capacity" },
                        new { parameterId = 2, isActive = (byte)1, parameterName = "Vessel Type" },
                        new { parameterId = 3, isActive = (byte)1, parameterName = "LOA" }
                    );
                });

            modelBuilder.Entity("Tariff.API.Data.RuleDetails", b =>
                {
                    b.Property<int>("ruleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("invoiceId");

                    b.Property<byte>("isActive");

                    b.Property<int>("parameterId");

                    b.Property<string>("ruleValue")
                        .IsRequired();

                    b.HasKey("ruleId");

                    b.HasIndex("invoiceId");

                    b.HasIndex("parameterId");

                    b.ToTable("RuleDetails");

                    b.HasData(
                        new { ruleId = 1, invoiceId = 1, isActive = (byte)1, parameterId = 1, ruleValue = "Sample Rule 1" },
                        new { ruleId = 2, invoiceId = 1, isActive = (byte)1, parameterId = 2, ruleValue = "Sample Rule 2" },
                        new { ruleId = 3, invoiceId = 1, isActive = (byte)1, parameterId = 3, ruleValue = "Sample Rule 3" },
                        new { ruleId = 4, invoiceId = 2, isActive = (byte)1, parameterId = 1, ruleValue = "Sample Rule 4" },
                        new { ruleId = 5, invoiceId = 2, isActive = (byte)1, parameterId = 2, ruleValue = "Sample Rule 5" },
                        new { ruleId = 6, invoiceId = 2, isActive = (byte)1, parameterId = 3, ruleValue = "Sample Rule 6" }
                    );
                });

            modelBuilder.Entity("Tariff.API.Data.RuleDetails", b =>
                {
                    b.HasOne("Tariff.API.Data.InvoiceMaster", "invoiceMaster")
                        .WithMany("ruleDetails")
                        .HasForeignKey("invoiceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Tariff.API.Data.ParameterMaster", "parameterMaster")
                        .WithMany("ruleDetails")
                        .HasForeignKey("parameterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
